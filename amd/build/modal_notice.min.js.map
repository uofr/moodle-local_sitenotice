{"version":3,"file":"modal_notice.min.js","sources":["../src/modal_notice.js"],"sourcesContent":["/**\n * Notice modal.\n * @author     Nathan Nguyen <nathannguyen@catalyst-au.net>\n * @copyright  Catalyst IT\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport Modal from 'core/modal';\nimport KeyCodes from 'core/key_codes';\nimport {getString} from 'core/str';\n\nconst SELECTORS = {\n    CLOSE_BUTTON: '[data-action=\"close\"]',\n    ACCEPT_BUTTON: '[data-action=\"accept\"]',\n    ACK_CHECKBOX: 'sitenotice-modal-ackcheckbox',\n    CAN_RECEIVE_FOCUS: 'input:not([type=\"hidden\"]), a[href], button:not([disabled])',\n    TOOL_TIP_WRAPPER: '#tooltip-wrapper',\n};\n\nconst ATTRIBUTE = {\n    NOTICE_ID: 'data-noticeid',\n    REQUIRED_ACKNOWLEDGE: 'data-noticereqack',\n};\n\nexport default class ModalNotice extends Modal {\n    static TYPE = 'local_sitenotice/modal_notice';\n\n    static TEMPLATE = 'local_sitenotice/modal_notice';\n\n    constructor(root) {\n        super(root);\n\n        if (!this.getFooter().find(SELECTORS.CLOSE_BUTTON).length) {\n            Notification.exception({message: 'No close button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.ACCEPT_BUTTON).length) {\n            Notification.exception({message: 'No accept button found'});\n        }\n    }\n\n    /**\n     * Get ID of close button.\n     * @returns {string}\n     */\n    getCloseButtonID() {\n        return '#' + this.getFooter().find(SELECTORS.CLOSE_BUTTON).attr('id');\n    }\n\n    /**\n     * Get ID of accept button.\n     * @returns {string}\n     */\n    getAcceptButtonID() {\n        return '#' + this.getFooter().find(SELECTORS.ACCEPT_BUTTON).attr('id');\n    }\n\n    /**\n     * Get ID of accept button.\n     * @returns {string}\n     */\n    getAckCheckboxID() {\n        return '#' + SELECTORS.ACK_CHECKBOX;\n    }\n\n    /**\n     * Set Notice ID to the current modal.\n     * @param {Integer} noticeid\n     */\n    setNoticeId(noticeid) {\n        this.getModal().attr(ATTRIBUTE.NOTICE_ID, noticeid);\n    }\n\n    /**\n     * Get the current notice id.\n     * @returns {*}\n     */\n    getNoticeId() {\n        return this.getModal().attr(ATTRIBUTE.NOTICE_ID);\n    }\n\n    /**\n     * Add Checkbox if the notice requires acknowledgement.\n     * @param {Integer} reqack\n     */\n    setRequiredAcknowledgement(reqack) {\n        const modal  = this;\n        if (reqack == 1) {\n            getString('modal:checkboxtext', 'local_sitenotice').then(function(langString) {\n                const body = modal.getBody();\n                const checkboxdiv = $(\"<div>\", {});\n                const ackcheckbox = $(\"<input>\", {type: \"checkbox\", id: SELECTORS.ACK_CHECKBOX});\n                const labelspan = $(\"<span>\", {class: \"checkboxlabel\"});\n                labelspan.append(langString);\n                checkboxdiv.append(ackcheckbox);\n                checkboxdiv.append(labelspan);\n                body.append(checkboxdiv);\n                const acceptbutton = modal.getFooter().find(SELECTORS.ACCEPT_BUTTON);\n                acceptbutton.show();\n                acceptbutton.attr('disabled', true);\n                // Tooltip for disabled box.\n                modal.getFooter().find(SELECTORS.TOOL_TIP_WRAPPER).tooltip();\n            }).catch(Notification.exception);\n        } else {\n            this.getFooter().find(SELECTORS.ACCEPT_BUTTON).css('display', 'none');\n        }\n    }\n\n    /**\n     * Turn off tool tip\n     */\n    turnoffToolTip() {\n        this.getFooter().find(SELECTORS.TOOL_TIP_WRAPPER).tooltip('disable');\n    }\n\n    /**\n     * Turn on tool tip\n     */\n    turnonToolTip() {\n        this.getFooter().find(SELECTORS.TOOL_TIP_WRAPPER).tooltip('enable');\n    }\n\n    /**\n     * Remove escape key event.\n     */\n    registerEventListeners() {\n        $(document).on('keydown', function(e) {\n            if (!this.isVisible()) {\n                return;\n            }\n\n            if (e.keyCode == KeyCodes.tab) {\n                this.handleTabLock(e);\n            }\n\n        }.bind(this));\n\n        $(document).on('mousedown', function(e) {\n            if (!this.isVisible()) {\n                return;\n            }\n            e.preventDefault();\n\n        }.bind(this));\n    }\n\n    /**\n     * CAN_RECEIVE_FOCUS in modal.js does not check if the disabled or hidden button\n     * @param {Event} e\n     */\n    handleTabLock(e) {\n        const target = $(document.activeElement);\n\n        const focusableElements = this.modal.find(SELECTORS.CAN_RECEIVE_FOCUS).filter(\":visible\");\n        const firstFocusable = focusableElements.first();\n        const lastFocusable = focusableElements.last();\n\n        let focusable = false;\n        let previous = 0;\n        let next = null;\n        focusableElements.each(function(index) {\n            if (target.is(this)) {\n                focusable = true;\n                previous = index;\n            }\n        });\n\n        // Focus to first element.\n        if (focusable == false) {\n            e.preventDefault();\n            firstFocusable.focus();\n            return;\n        } else {\n            if (target.is(firstFocusable) && e.shiftKey) {\n                lastFocusable.focus();\n                e.preventDefault();\n            } else if (target.is(lastFocusable) && !e.shiftKey) {\n                firstFocusable.focus();\n                e.preventDefault();\n            } else {\n                if (!e.shiftKey) {\n                    next = focusableElements.get(previous+1);\n                } else {\n                    next = focusableElements.get(previous-1);\n                }\n                next.focus();\n                e.preventDefault();\n            }\n        }\n    }\n}"],"names":["SELECTORS","ATTRIBUTE","ModalNotice","Modal","constructor","root","this","getFooter","find","length","exception","message","getCloseButtonID","attr","getAcceptButtonID","getAckCheckboxID","setNoticeId","noticeid","getModal","getNoticeId","setRequiredAcknowledgement","reqack","modal","then","langString","body","getBody","checkboxdiv","ackcheckbox","type","id","labelspan","class","append","acceptbutton","show","tooltip","catch","Notification","css","turnoffToolTip","turnonToolTip","registerEventListeners","document","on","e","isVisible","keyCode","KeyCodes","tab","handleTabLock","bind","preventDefault","target","activeElement","focusableElements","filter","firstFocusable","first","lastFocusable","last","focusable","previous","next","each","index","is","focus","shiftKey","get"],"mappings":"srBAaMA,uBACY,wBADZA,wBAEa,yBAFbA,uBAGY,+BAHZA,4BAIiB,8DAJjBA,2BAKgB,mBAGhBC,oBACS,sBAIMC,oBAAoBC,eAKrCC,YAAYC,YACFA,MAEDC,KAAKC,YAAYC,KAAKR,wBAAwBS,8BAClCC,UAAU,CAACC,QAAS,0BAGhCL,KAAKC,YAAYC,KAAKR,yBAAyBS,8BACnCC,UAAU,CAACC,QAAS,2BAQzCC,yBACW,IAAMN,KAAKC,YAAYC,KAAKR,wBAAwBa,KAAK,MAOpEC,0BACW,IAAMR,KAAKC,YAAYC,KAAKR,yBAAyBa,KAAK,MAOrEE,yBACW,IAAMf,uBAOjBgB,YAAYC,eACHC,WAAWL,KAAKZ,oBAAqBgB,UAO9CE,qBACWb,KAAKY,WAAWL,KAAKZ,qBAOhCmB,2BAA2BC,cACjBC,MAAShB,KACD,GAAVe,0BACU,qBAAsB,oBAAoBE,MAAK,SAASC,kBACxDC,KAAOH,MAAMI,UACbC,aAAc,mBAAE,QAAS,IACzBC,aAAc,mBAAE,UAAW,CAACC,KAAM,WAAYC,GAAI9B,yBAClD+B,WAAY,mBAAE,SAAU,CAACC,MAAO,kBACtCD,UAAUE,OAAOT,YACjBG,YAAYM,OAAOL,aACnBD,YAAYM,OAAOF,WACnBN,KAAKQ,OAAON,mBACNO,aAAeZ,MAAMf,YAAYC,KAAKR,yBAC5CkC,aAAaC,OACbD,aAAarB,KAAK,YAAY,GAE9BS,MAAMf,YAAYC,KAAKR,4BAA4BoC,aACpDC,MAAMC,sBAAa5B,gBAEjBH,YAAYC,KAAKR,yBAAyBuC,IAAI,UAAW,QAOtEC,sBACSjC,YAAYC,KAAKR,4BAA4BoC,QAAQ,WAM9DK,qBACSlC,YAAYC,KAAKR,4BAA4BoC,QAAQ,UAM9DM,6CACMC,UAAUC,GAAG,UAAW,SAASC,GAC1BvC,KAAKwC,aAIND,EAAEE,SAAWC,mBAASC,UACjBC,cAAcL,IAGzBM,KAAK7C,2BAELqC,UAAUC,GAAG,YAAa,SAASC,GAC5BvC,KAAKwC,aAGVD,EAAEO,kBAEJD,KAAK7C,OAOX4C,cAAcL,SACJQ,QAAS,mBAAEV,SAASW,eAEpBC,kBAAoBjD,KAAKgB,MAAMd,KAAKR,6BAA6BwD,OAAO,YACxEC,eAAiBF,kBAAkBG,QACnCC,cAAgBJ,kBAAkBK,WAEpCC,WAAY,EACZC,SAAW,EACXC,KAAO,QACXR,kBAAkBS,MAAK,SAASC,OACxBZ,OAAOa,GAAG5D,QACVuD,WAAY,EACZC,SAAWG,UAKF,GAAbJ,iBACAhB,EAAEO,sBACFK,eAAeU,QAGXd,OAAOa,GAAGT,iBAAmBZ,EAAEuB,UAC/BT,cAAcQ,QACdtB,EAAEO,kBACKC,OAAOa,GAAGP,iBAAmBd,EAAEuB,UACtCX,eAAeU,QACftB,EAAEO,mBAKEW,KAHClB,EAAEuB,SAGIb,kBAAkBc,IAAIP,SAAS,GAF/BP,kBAAkBc,IAAIP,SAAS,GAI1CC,KAAKI,QACLtB,EAAEO,uEAlKGlD,mBACH,iDADGA,uBAGC"}