define("local_sitenotice/modal_notice",["exports","jquery","core/notification","core/modal","core/key_codes","core/str"],(function(_exports,_jquery,_notification,_modal,_key_codes,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_jquery=_interopRequireDefault(_jquery),_notification=_interopRequireDefault(_notification),_modal=_interopRequireDefault(_modal),_key_codes=_interopRequireDefault(_key_codes);const SELECTORS_CLOSE_BUTTON='[data-action="close"]',SELECTORS_ACCEPT_BUTTON='[data-action="accept"]',SELECTORS_ACK_CHECKBOX="sitenotice-modal-ackcheckbox",SELECTORS_CAN_RECEIVE_FOCUS='input:not([type="hidden"]), a[href], button:not([disabled])',SELECTORS_TOOL_TIP_WRAPPER="#tooltip-wrapper",ATTRIBUTE_NOTICE_ID="data-noticeid";class ModalNotice extends _modal.default{constructor(root){super(root),this.getFooter().find(SELECTORS_CLOSE_BUTTON).length||_notification.default.exception({message:"No close button found"}),this.getFooter().find(SELECTORS_ACCEPT_BUTTON).length||_notification.default.exception({message:"No accept button found"})}getCloseButtonID(){return"#"+this.getFooter().find(SELECTORS_CLOSE_BUTTON).attr("id")}getAcceptButtonID(){return"#"+this.getFooter().find(SELECTORS_ACCEPT_BUTTON).attr("id")}getAckCheckboxID(){return"#"+SELECTORS_ACK_CHECKBOX}setNoticeId(noticeid){this.getModal().attr(ATTRIBUTE_NOTICE_ID,noticeid)}getNoticeId(){return this.getModal().attr(ATTRIBUTE_NOTICE_ID)}setRequiredAcknowledgement(reqack){const modal=this;1==reqack?(0,_str.getString)("modal:checkboxtext","local_sitenotice").then((function(langString){const body=modal.getBody(),checkboxdiv=(0,_jquery.default)("<div>",{}),ackcheckbox=(0,_jquery.default)("<input>",{type:"checkbox",id:SELECTORS_ACK_CHECKBOX}),labelspan=(0,_jquery.default)("<span>",{class:"checkboxlabel"});labelspan.append(langString),checkboxdiv.append(ackcheckbox),checkboxdiv.append(labelspan),body.append(checkboxdiv);const acceptbutton=modal.getFooter().find(SELECTORS_ACCEPT_BUTTON);acceptbutton.show(),acceptbutton.attr("disabled",!0),modal.getFooter().find(SELECTORS_TOOL_TIP_WRAPPER).tooltip()})).catch(_notification.default.exception):this.getFooter().find(SELECTORS_ACCEPT_BUTTON).css("display","none")}turnoffToolTip(){this.getFooter().find(SELECTORS_TOOL_TIP_WRAPPER).tooltip("disable")}turnonToolTip(){this.getFooter().find(SELECTORS_TOOL_TIP_WRAPPER).tooltip("enable")}registerEventListeners(){(0,_jquery.default)(document).on("keydown",function(e){this.isVisible()&&e.keyCode==_key_codes.default.tab&&this.handleTabLock(e)}.bind(this)),(0,_jquery.default)(document).on("mousedown",function(e){this.isVisible()&&e.preventDefault()}.bind(this))}handleTabLock(e){const target=(0,_jquery.default)(document.activeElement),focusableElements=this.modal.find(SELECTORS_CAN_RECEIVE_FOCUS).filter(":visible"),firstFocusable=focusableElements.first(),lastFocusable=focusableElements.last();let focusable=!1,previous=0,next=null;if(focusableElements.each((function(index){target.is(this)&&(focusable=!0,previous=index)})),0==focusable)return e.preventDefault(),void firstFocusable.focus();target.is(firstFocusable)&&e.shiftKey?(lastFocusable.focus(),e.preventDefault()):target.is(lastFocusable)&&!e.shiftKey?(firstFocusable.focus(),e.preventDefault()):(next=e.shiftKey?focusableElements.get(previous-1):focusableElements.get(previous+1),next.focus(),e.preventDefault())}}return _exports.default=ModalNotice,_defineProperty(ModalNotice,"TYPE","local_sitenotice/modal_notice"),_defineProperty(ModalNotice,"TEMPLATE","local_sitenotice/modal_notice"),_exports.default}));

//# sourceMappingURL=modal_notice.min.js.map